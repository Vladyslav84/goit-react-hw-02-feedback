{"version":3,"sources":["components/Statistics/Statistics .jsx","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions .jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","Statlist","Notification","message","FeedbackOptions","propspArr","onLeaveFeedback","map","btn","StatlistItem","onClick","button","type","App","state","Good","Neutral","Bad","evt","setState","prevState","target","innerHTML","countTotalFeedback","countPositiveFeedbackPercentage","TotalFeedBack","Math","floor","stateArr","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mPA0DeA,EAvDI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qBAAIC,UAAWC,IAAEC,SAAjB,UACI,wCAAYP,KACZ,2CAAeC,KACf,uCAAWC,KACX,yCAAaC,KACb,qDAAyBC,SCFtBI,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,K,gBCaGC,EAdS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAClC,OACI,oBAAIP,UAAWC,IAAEC,SAAjB,SACKI,EAAUE,KAAI,SAACC,GAAD,OACX,oBAAcT,UAAWC,IAAES,aAA3B,SACI,wBAAQC,QAASJ,EAAiBP,UAAWC,IAAEW,OAAQC,KAAK,SAA5D,SAAsEJ,KADjEA,SCoDVK,E,4MApDXC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETX,gBAAkB,SAACY,GAEf,EAAKC,UAAS,SAAAC,GACV,OAAO,eACFF,EAAIG,OAAOC,UAAYF,EAAUF,EAAIG,OAAOC,WAAa,O,EAMtEC,mBAAqB,WAEjB,OADY,EAAKT,MAAME,QAAU,EAAKF,MAAMG,IAAM,EAAKH,MAAMC,M,EAGjES,gCAAkC,WAE9B,IAAIC,EAAgB,EAAKX,MAAME,QAAU,EAAKF,MAAMG,IAAM,EAAKH,MAAMC,KAErE,OADkBW,KAAKC,MAAM,EAAKb,MAAMC,KAAOU,EAAgB,KAAO,K,4CAI1E,WACI,IAAMG,EAAWC,OAAOC,KAAKC,KAAKjB,OAClC,OACI,qCACI,uDACA,mCACI,cAAC,EAAD,CACIT,UAAWuB,EACXtB,gBAAiByB,KAAKzB,oBAI9B,4CAC+B,IAA9ByB,KAAKR,qBAA6B,cAAC,EAAD,CAAcpB,QAAQ,sBACrD,cAAC,EAAD,CACIT,KAAMqC,KAAKjB,MAAMC,KACjBpB,QAASoC,KAAKjB,MAAME,QACpBpB,IAAKmC,KAAKjB,MAAMG,IAChBpB,MAAOkC,KAAKR,qBACZzB,mBAAoBiC,KAAKP,2C,GA/C/BQ,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,gCAAgC,SAAW,kCAAkC,aAAe,wC,kBCAvHD,EAAOC,QAAU,CAAC,SAAW,gC","file":"static/js/main.eb7eabdd.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <ul className={s.Statlist}>\r\n            <li >Good: {good}</li>\r\n            <li >Neutral: {neutral}</li>\r\n            <li >Bad: {bad}</li>\r\n            <li >Total: {total}</li>\r\n            <li >Positive feedback: {positivePercentage}</li>\r\n        </ul>\r\n    )\r\n}\r\n// class SignUpForm extends Component {\r\n//     state = {\r\n//         login: '',\r\n//     };\r\n\r\n//     /*\r\n//      * Отвечает за обновление состояния\r\n//      */\r\n//     handleChange = e => {\r\n//         this.setState({ login: e.target.value });\r\n//     };\r\n\r\n//     /*\r\n//      * Вызывается при отправке формы\r\n//      */\r\n//     handleSubmit = evt => {\r\n//         evt.preventDefault();\r\n//         console.log(`Signed up as: ${ this.state.login }`);\r\n\r\n//         // Проп который передается форме для вызова при сабмите\r\n//         this.props.onSubmit(this.state.login);\r\n//     };\r\n\r\n//     render() {\r\n//         const { login } = this.state;\r\n\r\n//         return (\r\n//             <form onSubmit={this.handleSubmit}>\r\n//                 <label>\r\n//                     Name\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         placeholder=\"Enter login\"\r\n//                         value={login}\r\n//                         onChange={this.handleChange}\r\n//                     />\r\n//                 </label>\r\n\r\n//                 <button type=\"submit\">Sign up as {login}</button>\r\n//             </form>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ propspArr, onLeaveFeedback }) => {\r\n    return (\r\n        <ul className={s.Statlist}>\r\n            {propspArr.map((btn) => (\r\n                <li key={btn} className={s.StatlistItem}>\r\n                    <button onClick={onLeaveFeedback} className={s.button} type=\"button\">{btn}</button>\r\n                </li>\r\n\r\n            ))}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default FeedbackOptions;","import React, { Component } from 'react';\r\nimport Statistics from './components/Statistics/Statistics '\r\nimport Notification from './components/Notification/Notification'\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions '\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        Good: 0,\r\n        Neutral: 0,\r\n        Bad: 0\r\n    }\r\n    onLeaveFeedback = (evt) => {\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                [evt.target.innerHTML]: prevState[evt.target.innerHTML] + 1\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        let total = this.state.Neutral + this.state.Bad + this.state.Good;\r\n        return total;\r\n    };\r\n    countPositiveFeedbackPercentage = () => {\r\n\r\n        let TotalFeedBack = this.state.Neutral + this.state.Bad + this.state.Good;\r\n        let PosFeedBack = Math.floor(this.state.Good / TotalFeedBack * 100) + \"%\";\r\n        return PosFeedBack;\r\n    };\r\n\r\n    render() {\r\n        const stateArr = Object.keys(this.state);\r\n        return (\r\n            <>\r\n                <h2>Please leave feedback</h2>\r\n                <>\r\n                    <FeedbackOptions\r\n                        propspArr={stateArr}\r\n                        onLeaveFeedback={this.onLeaveFeedback}\r\n                    />\r\n                </>\r\n\r\n                <h2>Statistics</h2>\r\n                {this.countTotalFeedback() === 0 ? <Notification message=\"No feedback given\" /> :\r\n                    <Statistics\r\n                        good={this.state.Good}\r\n                        neutral={this.state.Neutral}\r\n                        bad={this.state.Bad}\r\n                        total={this.countTotalFeedback()}\r\n                        positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                    />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2hA7e\",\"Statlist\":\"FeedbackOptions_Statlist__1JMXd\",\"StatlistItem\":\"FeedbackOptions_StatlistItem__frVKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statlist\":\"Statistics_Statlist__1gjCs\"};"],"sourceRoot":""}